@model Pagination<CCRestitution.Models.Account>

@{
    ViewData["Title"] = "Manage Cases";
    Layout = "SubLayouts/_Index";
}

<form asp-action="Index" method="get">
<div class="d-flex flex-row justify-content-between align-items-center">

    <div class="form-floating mb-3 flex-grow-1 me-1">
        <input type="text" class="form-control" id="docket" name="docket" value="@ViewBag.Docket">
        <label for="docket">Docket #</label>
    </div>
    <div class="form-floating mb-3 flex-grow-1 me-1">
        <input type="text" class="form-control" id="fname" name="fname" value="@ViewBag.FName">
        <label for="fname">First Name</label>
    </div>
    <div class="form-floating mb-3 flex-grow-1 me-1">
        <input type="text" class="form-control" id="lname" name="lname" value="@ViewBag.LName">
        <label for="lname">Last Name</label>
    </div>
    <input type="submit" class="btn btn-primary" value="Search" />

</div>
</form>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Case Number</th>
            <th>Docket Number</th>
            <th>Type</th>
            <th>Assigned Date</th>
            <th>Closed Date</th>
            <th>Arrest Date</th>
            <th>Agency Code</th>
            <th>Custody Status</th>
            <th>Court</th>
            <th>Judge</th>
            <th>Defendants</th>
            <th>Victims</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Results) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CaseNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Docket)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @(item.AssignedDate.HasValue ? item.AssignedDate.Value.ToString("d") : "")
            </td>
            <td>
                @(item.ClosedDate.HasValue ? item.ClosedDate.Value.ToString("d") : "")
            </td>
            <td>
                @(item.ArrestDate.HasValue ? item.ArrestDate.Value.ToString("d") : "")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AgencyCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustodyStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Court.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Judge.FullName)
            </td>
            <td>
                @if(item.Defendants.Count > 0)
                {
                    <ul>
                        @foreach(var defendant in item.Defendants)
                            {
                                <li>@defendant.FirstName @defendant.MiddleName @defendant.LastName</li>
                            }
                        </ul>        
                }
            </td>
            <td>
                @if (item.Victims.Count > 0)
                {
                    <ul>
                        @foreach (var victim in item.Victims)
                        {
                            <li>@victim.FirstName @victim.MiddleName @victim.LastName ($@victim.AmountDue)</li>
                        }
                    </ul>
                }
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.AccountId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.AccountId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.AccountId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
