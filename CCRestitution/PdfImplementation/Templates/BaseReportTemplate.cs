using CCRestitution.PdfImplementation.DocumentModels;
using QuestPDF.Fluent;
using QuestPDF.Infrastructure;

namespace CCRestitution.PdfImplementation.Templates
{
    public class BaseReportTemplate : IDocument
    {
        public ReportDataModel Model { get; }

        public BaseReportTemplate(ReportDataModel model)
        {
            Model = model;
        }

        public DocumentMetadata GetMetadata() => DocumentMetadata.Default;
        public DocumentSettings GetSettings() => DocumentSettings.Default;


        public void Compose(IDocumentContainer container)
        {
            container.Page(page =>
            {
                page.Margin(0.5f, Unit.Inch);
                page.Header().Element(ComposeHeader);
                page.Content().Element(ComposeContent);
                page.Footer().Element(ComposeFooter);
            });
        }

        void ComposeContent(IContainer container)
        {
            container.PaddingVertical(40).Placeholder();
        }

        void ComposeHeader(IContainer container)
        {
            container.ShowOnce().Row(row =>
            {
                row.RelativeItem().AlignCenter().Column(column =>
                {
                    column.Item().Text(Model.Title);

                    if (Model.DisplayDateAsSpan)
                    {
                        column.Item().Text($"{Model.StartDate.ToString(Model.DateFormat)} - {Model.EndDate.ToString(Model.DateFormat)}");
                    }
                    else
                    {
                        column.Item().Text(Model.StartDate.ToString(Model.DateFormat));
                    }

                });
            });
        }

        void ComposeFooter(IContainer container)
        {
            container.Row(row =>
            {
                row.RelativeItem().Column(column =>
                {
                    column.Item().Text(text =>
                    {
                        text.Span("Generated On: ");
                        text.Span(Model.GeneratedDate.ToString(Model.GeneratedDateFormat)).Italic();
                    });
                    if (!String.IsNullOrEmpty(Model.UserName))
                    {
                        column.Item().Text(text =>
                        {
                            text.Span("Generated By: ");
                            text.Span(Model.UserName).Italic();
                        });
                    }
                });

                row.RelativeItem().Text(text =>
                {
                    text.CurrentPageNumber();
                    text.Span(" / ");
                    text.TotalPages();
                });
            });
        }
    }
}
